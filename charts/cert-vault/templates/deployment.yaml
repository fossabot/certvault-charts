apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cert-vault.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "cert-vault.name" . }}
    helm.sh/chart: {{ include "cert-vault.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cert-vault.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cert-vault.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      nodeSelector:
        {{- if .Values.nodeSelector }}
        {{ toYaml .Values.nodeSelector | nindent 8 }}
        {{- end }}
      affinity:
        nodeAffinity:
          {{- if .Values.nodeAffinity }}
          {{ toYaml .Values.nodeAffinity | nindent 10 }}
          {{- end }}
        podAffinity:
          {{- if .Values.podAffinity }}
          {{ toYaml .Values.podAffinity | nindent 10 }}
          {{- end }}
      initContainers:
        - name: wait-for-redis
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -zv {{ ternary .Values.redis.external.host (ternary (printf "%s-redis-master" .Release.Name) "localhost" .Values.redis.internal) (not .Values.redis.internal) }} {{ ternary .Values.redis.external.port "6379" (not .Values.redis.internal) }}; do echo waiting for redis; sleep 2; done;']
        {{- if eq .Values.database.type "mysql" }}
        - name: wait-for-mysql
          image: mysql:5.7
          {{- if .Values.mysql.internal}}
          command: [ 'sh', '-c', 'until mysqladmin ping -u {{ .Values.mysql.auth.username }} -p{{ .Values.mysql.auth.password }} -h {{ .Release.Name }}-mysql -P 3306 --silent; do echo waiting for mysql; sleep 2; done;' ]
          {{- else }}
          command: [ 'sh', '-c', 'until mysqladmin ping -u {{ .Values.mysql.external.username }} -p{{ .Values.mysql.external.password }} -h {{ .Values.mysql.external.host }} -P {{ .Values.mysql.external.port }} --silent; do echo waiting for mysql; sleep 2; done;' ]
          {{- end }}
        {{- end }}
        {{- if eq .Values.database.type "postgresql" }}
        - name: wait-for-postgresql
          image: postgres:17
          {{- if .Values.postgresql.internal}}
          command: [ 'sh', '-c', 'until pg_isready -h {{ .Release.Name }}-postgresql -p 5432 -U {{ .Values.postgresql.auth.username }}; do echo waiting for postgresql; sleep 2; done;' ]
          {{- else }}
          command: [ 'sh', '-c', 'until pg_isready -h {{ .Values.postgresql.external.host }} -p {{ .Values.postgresql.external.port }} -U {{ .Values.postgresql.external.username }}; do echo waiting for postgresql; sleep 2; done;']
          {{- end }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: business
              containerPort: {{ .Values.service.ports.business }}
            - name: management
              containerPort: {{ .Values.service.ports.management }}
          env:
            {{- if .Values.springBoot.profile }}
            - name: SPRING_PROFILES_ACTIVE
              value: "{{ .Values.springBoot.profile }}"
            {{- end }}
            {{- if .Values.service.ports.business }}
            - name: SPRING_SERVER_PORT
              value: "{{ .Values.service.ports.business }}"
            {{- end }}
            {{- if .Values.database.type }}
            - name: DATABASE_TYPE
              value: "{{ .Values.database.type }}"
            {{- end }}
            {{- if eq .Values.database.type "postgresql"}}
            - name: SPRING_DATASOURCE_DRIVER
              value: "org.postgresql.Driver"
            {{- if .Values.postgresql.internal }}
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.auth.database }}?sslmode=disable"
            - name: SPRING_DATASOURCE_USERNAME
              value: "{{ .Values.postgresql.auth.username }}"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "{{ .Values.postgresql.auth.password }}"
            {{- else if and .Values.postgresql.external.host .Values.postgresql.external.port .Values.postgresql.external.database }}
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://{{ .Values.postgresql.external.host }}:{{ .Values.postgresql.external.port }}/{{ .Values.postgresql.external.database }}?sslmode=disable"
            - name: SPRING_DATASOURCE_USERNAME
              value: "{{ .Values.postgresql.external.username }}"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "{{ .Values.postgresql.external.password }}"
            {{- end }}
            {{- else if eq .Values.database.type "mysql"}}
            - name: SPRING_DATASOURCE_DRIVER
              value: "com.mysql.cj.jdbc.Driver"
            {{- if .Values.mysql.internal }}
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://{{ .Release.Name }}-mysql:3306/{{ .Values.mysql.auth.database }}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"
            - name: SPRING_DATASOURCE_USERNAME
              value: "{{ .Values.mysql.auth.username }}"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "{{ .Values.mysql.auth.password }}"
            {{- else if and .Values.mysql.external.host .Values.mysql.external.port .Values.mysql.external.database }}
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://{{ .Values.mysql.external.host }}:{{ .Values.mysql.external.port }}/{{ .Values.mysql.external.database }}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"
            - name: SPRING_DATASOURCE_USERNAME
              value: "{{ .Values.mysql.external.username }}"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "{{ .Values.mysql.external.password }}"
            {{- end }}
            {{- end }}
            {{- if ternary .Values.redis.external.host (ternary (printf "%s-redis-master" .Release.Name) "localhost" .Values.redis.internal) (not .Values.redis.internal) }}
            - name: SPRING_REDIS_HOST
              value: {{
                ternary
                  (.Values.redis.external.host | quote)
                  (ternary (printf "%s-redis-master" .Release.Name) "localhost" .Values.redis.internal | quote)
                  (not .Values.redis.internal)
              }}
            {{- end }}
            {{- if ternary .Values.redis.external.port "6379" (not .Values.redis.internal) }}
            - name: SPRING_REDIS_PORT
              value: "{{ ternary .Values.redis.external.port "6379" (not .Values.redis.internal) }}"
            {{- end }}
            {{- if ternary .Values.redis.external.database "0" (not .Values.redis.internal) }}
            - name: SPRING_REDIS_DATABASE
              value: "{{ ternary .Values.redis.external.database "0" (not .Values.redis.internal) }}"
            {{- end }}
            {{- if .Values.redis.internal }}
            {{- if .Values.redis.auth.enabled }}
            - name: SPRING_REDIS_PASSWORD
              value: "{{ .Values.redis.auth.password }}"
            {{- end }}
            {{- else }}
            {{- if .Values.redis.external.auth.enabled }}
            - name: SPRING_REDIS_PASSWORD
              value: "{{ .Values.redis.external.auth.password }}"
            {{- end }}
            {{- end }}
            {{- if .Values.server.baseUrl }}
            - name: SERVER_BASE_URL
              value: "{{ .Values.server.baseUrl }}"
            {{- end }}
            {{- if .Values.oidc.enabled }}
            - name: ENABLE_OIDC
              value: "{{ .Values.oidc.enabled }}"
            {{- if .Values.oidc.provider.name}}
            - name: OIDC_PROVIDER
              value: "{{ .Values.oidc.provider.name }}"
            {{- end }}
            {{- if .Values.oidc.provider.logo }}
            - name: OIDC_LOGO
              value: "{{ .Values.oidc.provider.logo }}"
            {{- end }}
            {{- if .Values.oidc.provider.clientId }}
            - name: OIDC_CLIENT_ID
              value: "{{ .Values.oidc.provider.clientId }}"
            {{- end }}
            {{- if .Values.oidc.provider.clientSecret }}
            - name: OIDC_CLIENT_SECRET
              value: "{{ .Values.oidc.provider.clientSecret }}"
            {{- end }}
            {{- if .Values.oidc.provider.authorizationUri }}
            - name: OIDC_AUTHORIZATION_URI
              value: "{{ .Values.oidc.provider.authorizationUri }}"
            {{- end}}
            {{- if .Values.oidc.provider.tokenUri }}
            - name: OIDC_TOKEN_URI
              value: "{{ .Values.oidc.provider.tokenUri }}"
            {{- end }}
            {{- if .Values.oidc.provider.userInfoUri}}
            - name: OIDC_USER_INFO_URI
              value: "{{ .Values.oidc.provider.userInfoUri }}"
            {{- end }}
            {{- if .Values.oidc.provider.jwkSetUri }}
            - name: OIDC_JWK_SET_URI
              value: "{{ .Values.oidc.provider.jwkSetUri }}"
            {{- end }}
            {{- if .Values.oidc.provider.usernameAttributes }}
            - name: OIDC_USERNAME_ATTRIBUTE
              value: "{{ .Values.oidc.provider.usernameAttributes }}"
            {{- end }}
            {{- end }}
            {{- if .Values.springBoot.logging.level.com_gregperlinli_certvault }}
            - name: SPRING_LOGGING_LEVEL_COM_GREGPERLINLI_CERTVAULT
              value: "{{ .Values.springBoot.logging.level.com_gregperlinli_certvault | default "debug" }}"
            {{- end }}
            {{- if .Values.springBoot.logging.level.org_springframework }}
            - name: SPRING_LOGGING_LEVEL_ORG_SPRINGFRAMEWORK
              value: "{{ .Values.springBoot.logging.level.org_springframework | default "warn" }}"
            {{- end }}
            {{- if .Values.service.ports.management }}
            - name: SPRING_MANAGEMENT_SERVER_PORT
              value: "{{ .Values.service.ports.management }}"
            {{- end }}
            {{- if .Values.init.superadmin.username }}
            - name: SUPERADMIN_USERNAME
              value: "{{ .Values.init.superadmin.username }}"
            {{- end }}
            {{- if .Values.init.superadmin.displayName}}
            - name: SUPERADMIN_DISPLAY_NAME
              value: "{{ .Values.init.superadmin.displayName }}"
            {{- end }}
            {{- if .Values.init.superadmin.email}}
            - name: SUPERADMIN_EMAIL
              value: "{{ .Values.init.superadmin.email }}"
            {{- end }}
            {{- if .Values.init.superadmin.password}}
            - name: SUPERADMIN_PASSWORD
              value: "{{ .Values.init.superadmin.password }}"
            {{- end }}
            {{- if .Values.encrypt.rsa.key.publicKey }}
            - name: SPRING_RSA_PUBLIC_KEY
              value: "{{ .Values.encrypt.rsa.key.publicKey }}"
            {{- end}}
            {{- if .Values.encrypt.rsa.key.privateKey }}
            - name: SPRING_RSA_PRIVATE_KEY
              value: "{{ .Values.encrypt.rsa.key.privateKey }}"
            {{- end}}
            {{- if .Values.apiDocs.enabled }}
            - name: SPRING_API_DOCS_ENABLED
              value: "{{ .Values.apiDocs.enabled }}"
            {{- end }}
            {{- if .Values.springBoot.javaOpts }}
            - name: JAVA_OPTS
              value: "{{ join " " .Values.springBoot.javaOpts }}"
            {{- end }}
          resources:
            {{- if .Values.resources.requests }}
            requests:
              cpu: {{ .Values.resources.requests.cpu | default "500m" }}
              memory: {{ .Values.resources.requests.memory | default "512Mi" }}
            {{- end }}
            {{- if .Values.resources.limits }}
            limits:
              cpu: {{ .Values.resources.limits.cpu | default "1000m" }}
              memory: {{ .Values.resources.limits.memory | default "1024Mi" }}
            {{- end }}
          command: ["sh", "-c"]
          args:
            - java $JAVA_OPTS -jar /app.jar