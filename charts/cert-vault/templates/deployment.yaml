apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cert-vault.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "cert-vault.name" . }}
    helm.sh/chart: {{ include "cert-vault.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cert-vault.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cert-vault.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: wait-for-redis
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -zv {{ ternary .Values.redis.external.host (ternary (printf "%s-redis-master" .Release.Name) "localhost" .Values.redis.internal) (not .Values.redis.internal) }} {{ ternary .Values.redis.external.port "6379" (not .Values.redis.internal) }}; do echo waiting for redis; sleep 2; done;']
        - name: wait-for-mysql
          image: mysql:5.7
          command: [ 'sh', '-c', 'until mysqladmin ping -u {{ .Values.mysql.username }} -p{{ .Values.mysql.password }} -h {{ .Values.mysql.host }} -P {{ .Values.mysql.port }} --silent; do echo waiting for mysql; sleep 2; done;' ]
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: business
              containerPort: {{ .Values.service.ports.business }}
            - name: management
              containerPort: {{ .Values.service.ports.management }}
          env:
            {{- if .Values.springBoot.profile }}
            - name: SPRING_PROFILES_ACTIVE
              value: "{{ .Values.springBoot.profile }}"
            {{- end }}
            {{- if .Values.service.ports.business }}
            - name: SPRING_SERVER_PORT
              value: "{{ .Values.service.ports.business }}"
            {{- end }}
            {{- if and .Values.mysql.host .Values.mysql.port .Values.mysql.database }}
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://{{ .Values.mysql.host }}:{{ .Values.mysql.port }}/{{ .Values.mysql.database }}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"
            {{- end }}
            {{- if .Values.mysql.username }}
            - name: SPRING_DATASOURCE_USERNAME
              value: "{{ .Values.mysql.username }}"
            {{- end }}
            {{- if .Values.mysql.password }}
            - name: SPRING_DATASOURCE_PASSWORD
              value: "{{ .Values.mysql.password }}"
            {{- end }}
            {{- if ternary .Values.redis.external.host (ternary (printf "%s-redis-master" .Release.Name) "localhost" .Values.redis.internal) (not .Values.redis.internal) }}
            - name: SPRING_REDIS_HOST
              value: {{
                ternary
                  (.Values.redis.external.host | quote)
                  (ternary (printf "%s-redis-master" .Release.Name) "localhost" .Values.redis.internal | quote)
                  (not .Values.redis.internal)
              }}
            {{- end }}
            {{- if ternary .Values.redis.external.port "6379" (not .Values.redis.internal) }}
            - name: SPRING_REDIS_PORT
              value: "{{ ternary .Values.redis.external.port "6379" (not .Values.redis.internal) }}"
            {{- end }}
            {{- if ternary .Values.redis.external.database "0" (not .Values.redis.internal) }}
            - name: SPRING_REDIS_DATABASE
              value: "{{ ternary .Values.redis.external.database "0" (not .Values.redis.internal) }}"
            {{- end }}
            {{- if .Values.redis.internal }}
            {{- if .Values.redis.auth.enabled }}
            - name: SPRING_REDIS_PASSWORD
              value: "{{ .Values.redis.auth.password }}"
            {{- end }}
            {{- else }}
            {{- if .Values.redis.external.auth.enabled }}
            - name: SPRING_REDIS_PASSWORD
              value: "{{ .Values.redis.external.auth.password }}"
            {{- end }}
            {{- end }}
            {{- if .Values.springBoot.logging.level.com_gregperlinli_certvault }}
            - name: SPRING_LOGGING_LEVEL_COM_GREGPERLINLI_CERTVAULT
              value: "{{ .Values.springBoot.logging.level.com_gregperlinli_certvault | default "debug" }}"
            {{- end }}
            {{- if .Values.springBoot.logging.level.org_springframework }}
            - name: SPRING_LOGGING_LEVEL_ORG_SPRINGFRAMEWORK
              value: "{{ .Values.springBoot.logging.level.org_springframework | default "warn" }}"
            {{- end }}
            {{- if .Values.service.ports.management }}
            - name: SPRING_MANAGEMENT_SERVER_PORT
              value: "{{ .Values.service.ports.management }}"
            {{- end }}
            {{- if .Values.springBoot.javaOpts }}
            - name: JAVA_OPTS
              value: "{{ join " " .Values.springBoot.javaOpts }}"
            {{- end }}
          resources:
            {{- if .Values.resources.requests }}
            requests:
              cpu: {{ .Values.resources.requests.cpu | default "500m" }}
              memory: {{ .Values.resources.requests.memory | default "512Mi" }}
            {{- end }}
            {{- if .Values.resources.limits }}
            limits:
              cpu: {{ .Values.resources.limits.cpu | default "1000m" }}
              memory: {{ .Values.resources.limits.memory | default "1024Mi" }}
            {{- end }}
          command: ["sh", "-c"]
          args:
            - java $JAVA_OPTS -jar /app.jar